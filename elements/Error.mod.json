{
  "_fv": 73,
  "_type": "animatedentity",
  "definition": {
    "mobName": "Sukuna",
    "mobLabel": "",
    "mobModelTexture": "circletwo.png",
    "mobModelGlowTexture": "sukunamark.png",
    "visualScale": {
      "fixedValue": 1.0
    },
    "boundingBoxScale": {
      "fixedValue": 1.0
    },
    "entityDataEntries": [
      {
        "name": "OWNER",
        "type": "string",
        "value": ""
      }
    ],
    "modelWidth": 0.6,
    "modelHeight": 1.8,
    "modelShadowSize": 0.5,
    "mountedYOffset": 0.0,
    "stepHeight": 0.6,
    "hasSpawnEgg": true,
    "spawnEggBaseColor": {
      "value": -1,
      "falpha": 0.0
    },
    "spawnEggDotColor": {
      "value": -1,
      "falpha": 0.0
    },
    "creativeTabs": [],
    "isBoss": false,
    "bossBarColor": "PINK",
    "bossBarType": "PROGRESS",
    "equipmentMainHand": {
      "value": ""
    },
    "equipmentOffHand": {
      "value": ""
    },
    "equipmentHelmet": {
      "value": ""
    },
    "equipmentBody": {
      "value": ""
    },
    "equipmentLeggings": {
      "value": ""
    },
    "equipmentBoots": {
      "value": ""
    },
    "mobBehaviourType": "Mob",
    "mobCreatureType": "UNDEFINED",
    "attackStrength": 3,
    "attackKnockback": 0.0,
    "knockbackResistance": 0.0,
    "movementSpeed": 0.3,
    "armorBaseValue": 0.0,
    "trackingRange": 64,
    "followRange": 16,
    "health": 100,
    "xpAmount": 0,
    "waterMob": false,
    "flyingMob": false,
    "guiBoundTo": "<NONE>",
    "inventorySize": 9,
    "inventoryStackSize": 64,
    "deathTime": 20,
    "lerp": 4,
    "disableCollisions": false,
    "ridable": false,
    "canControlForward": false,
    "canControlStrafe": false,
    "immuneToFire": false,
    "immuneToArrows": false,
    "immuneToFallDamage": false,
    "immuneToCactus": false,
    "immuneToDrowning": false,
    "immuneToLightning": false,
    "immuneToPotions": false,
    "immuneToPlayer": false,
    "immuneToExplosion": false,
    "immuneToTrident": false,
    "immuneToAnvil": false,
    "immuneToWither": false,
    "immuneToDragonBreath": false,
    "mobDrop": {
      "value": ""
    },
    "livingSound": {
      "value": ""
    },
    "hurtSound": {
      "value": "entity.generic.hurt"
    },
    "deathSound": {
      "value": "entity.generic.death"
    },
    "stepSound": {
      "value": ""
    },
    "raidCelebrationSound": {
      "value": ""
    },
    "onMobTickUpdate": {
      "name": "CloneOnEntityTickUpdate"
    },
    "onInitialSpawn": {
      "name": "SukunaROnInitialEntitySpawn"
    },
    "hasAI": true,
    "aiBase": "(none)",
    "aixml": "<xml xmlns=\"https://developers.google.com/blockly/xml\"><block type=\"aitasks_container\" deletable=\"false\" x=\"40\" y=\"40\"><next><block type=\"java_code\"><field name=\"CODE\">this.getNavigation().getNodeEvaluator().setCanOpenDoors(true);&amp;#10;        this.goalSelector.addGoal(1, new MeleeAttackGoal(this, 1.3, true) {&amp;#10;            protected double getAttackReachSqr(LivingEntity entity) {&amp;#10;                return (double)(this.mob.getBbWidth() * this.mob.getBbWidth() + entity.getBbWidth());&amp;#10;            }&amp;#10;&amp;#10;            public boolean canUse() {&amp;#10;                double x = ErroEntity.this.getX();&amp;#10;                double y = ErroEntity.this.getY();&amp;#10;                double z = ErroEntity.this.getZ();&amp;#10;                Entity entity = ErroEntity.this;&amp;#10;                Level world = ErroEntity.this.level();&amp;#10;                return super.canUse() &amp;&amp; LogicAttackTargetProcedure.execute(entity);&amp;#10;            }&amp;#10;        });&amp;#10;        this.targetSelector.addGoal(2, new HurtByTargetGoal(this, new Class[0]));&amp;#10;        this.targetSelector.addGoal(3, new NearestAttackableTargetGoal(this, LivingEntity.class, false, false) {&amp;#10;            public boolean canUse() {&amp;#10;                double x = ErroEntity.this.getX();&amp;#10;                double y = ErroEntity.this.getY();&amp;#10;                double z = ErroEntity.this.getZ();&amp;#10;                Entity entity = ErroEntity.this;&amp;#10;                Level world = ErroEntity.this.level();&amp;#10;                return super.canUse() &amp;&amp; LogicAttackTargetStartProcedure.execute(world, entity);&amp;#10;            }&amp;#10;&amp;#10;            public boolean canContinueToUse() {&amp;#10;                double x = ErroEntity.this.getX();&amp;#10;                double y = ErroEntity.this.getY();&amp;#10;                double z = ErroEntity.this.getZ();&amp;#10;                Entity entity = ErroEntity.this;&amp;#10;                Level world = ErroEntity.this.level();&amp;#10;                return super.canContinueToUse() &amp;&amp; LogicAttackTargetStartProcedure.execute(world, entity);&amp;#10;            }&amp;#10;        });&amp;#10;        this.goalSelector.addGoal(4, new RandomStrollGoal(this, 1.0));&amp;#10;        this.goalSelector.addGoal(5, new RandomLookAroundGoal(this));&amp;#10;        this.goalSelector.addGoal(6, new FloatGoal(this));&amp;#10;        this.goalSelector.addGoal(7, new MoveBackToVillageGoal(this, 0.6, false));&amp;#10;        this.goalSelector.addGoal(8, new OpenDoorGoal(this, true));&amp;#10;        this.goalSelector.addGoal(9, new OpenDoorGoal(this, false));</field></block></next></block></xml>",
    "model": "human.geo.json",
    "groupName": "",
    "animation1": "idle",
    "animation2": "walk",
    "animation3": "death",
    "animation4": "attack",
    "animation5": "swim",
    "animation6": "",
    "animation7": "sprint3",
    "animation8": "",
    "animation9": "",
    "animation10": "sprint2",
    "enable2": true,
    "enable3": true,
    "enable4": true,
    "enable5": true,
    "enable6": false,
    "enable7": true,
    "enable8": false,
    "enable9": false,
    "enable10": true,
    "breedable": false,
    "tameable": false,
    "disableDeathRotation": false,
    "headMovement": false,
    "eyeHeight": false,
    "breedTriggerItems": [],
    "ranged": false,
    "rangedAttackItem": {
      "value": ""
    },
    "rangedItemType": "Default item",
    "rangedAttackInterval": 20,
    "rangedAttackRadius": 10.0,
    "height": 1.0,
    "attackRate": 7,
    "raidSpawnsCount": [
      4,
      3,
      3,
      4,
      4,
      4,
      2
    ],
    "spawnThisMob": false,
    "doesDespawnWhenIdle": false,
    "spawningProbability": 20,
    "mobSpawningType": "monster",
    "minNumberOfMobsPerGroup": 4,
    "maxNumberOfMobsPerGroup": 4,
    "restrictionBiomes": [],
    "spawnInDungeons": false
  }
}