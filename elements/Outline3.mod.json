{
  "_fv": 60,
  "_type": "procedure",
  "definition": {
    "procedurexml": "<xml xmlns=\"https://developers.google.com/blockly/xml\"><block type=\"event_trigger\" deletable=\"false\" x=\"40\" y=\"40\"><field name=\"trigger\">no_ext_trigger</field><next><block type=\"controls_if\"><value name=\"IF0\"><block type=\"logic_entity_compare\"><field name=\"entity\">EntityPlayerMP</field><value name=\"compareTo\"><block type=\"entity_from_deps\"></block></value></block></value><statement name=\"DO0\"><block type=\"world_entity_inrange_foreach\"><value name=\"_placeholder\"><block type=\"entity_iterator\" deletable=\"false\" movable=\"false\"></block></value><value name=\"x\"><block type=\"coord_x\"></block></value><value name=\"y\"><block type=\"coord_y\"></block></value><value name=\"z\"><block type=\"coord_z\"></block></value><value name=\"range\"><block type=\"math_number\"><field name=\"NUM\">20</field></block></value><statement name=\"foreach\"><block type=\"controls_if\"><value name=\"IF0\"><block type=\"logic_negate\"><value name=\"BOOL\"><block type=\"compare_entities\"><value name=\"a\"><block type=\"entity_iterator\"></block></value><value name=\"b\"><block type=\"entity_from_deps\"></block></value></block></value></block></value><statement name=\"DO0\"><block type=\"java_code\"><field name=\"CODE\">Minecraft mc = Minecraft.getInstance();&amp;#10;            mc.execute(() -&gt; {&amp;#10;                Entity camEntity = mc.getCameraEntity();&amp;#10;                double d0 = camEntity.getX();&amp;#10;                double d1 = camEntity.getY() + camEntity.getEyeHeight();&amp;#10;                double d2 = camEntity.getZ();&amp;#10;                &amp;#10;                AABB aabb = new AABB(new Vec3(x - 2, y - 2, z - 2), new Vec3(x + 2, y + 2, z + 2)); // Adjust the size as needed&amp;#10;                &amp;#10;                RenderSystem.depthMask(true);&amp;#10;                VertexConsumer vertexConsumer = mc.renderBuffers().bufferSource().getBuffer(RenderType.lines());&amp;#10;&amp;#10;                PoseStack matrixStack = new PoseStack();&amp;#10;                matrixStack.pushPose();&amp;#10;                matrixStack.translate(-d0, -d1, -d2);&amp;#10;                LevelRenderer.renderLineBox(matrixStack, vertexConsumer, aabb, 1.0F, 0.0F, 0.0F, 1.0F); // Red outline&amp;#10;                matrixStack.popPose();&amp;#10;            });</field></block></statement></block></statement></block></statement></block></next></block></xml>"
  }
}