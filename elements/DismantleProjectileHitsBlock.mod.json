{
  "_fv": 66,
  "_type": "procedure",
  "definition": {
    "procedurexml": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><xml xmlns=\"https://developers.google.com/blockly/xml\"><block deletable=\"false\" type=\"event_trigger\" x=\"40\" y=\"40\"><field name=\"trigger\">no_ext_trigger</field><next><block type=\"controls_if\"><value name=\"IF0\"><block type=\"entity_is_projectile\"><value name=\"entity\"><block type=\"immediate_source_entity_from_deps\"/></value></block></value><statement name=\"DO0\"><block type=\"controls_if\"><value name=\"IF0\"><block type=\"logic_binary_ops\"><field name=\"OP\">EQ</field><value name=\"A\"><block type=\"world_data_logic_getgamerule\"><field name=\"gamerulesboolean\">MOB_GRIEFING</field></block></value><value name=\"B\"><block type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></block></value></block></value><statement name=\"DO0\"><block type=\"java_code\"><field name=\"CODE\">Vec3 currentPos = new Vec3(immediatesourceentity.getBlockX(), immediatesourceentity.getBlockY(), immediatesourceentity.getBlockZ());&amp;#10;\t\t\t\tLevel level = immediatesourceentity.level();&amp;#10;\t\t\t\tif (level == null)&amp;#10;\t\t\t\t\treturn; // Ensure the level is not null&amp;#10;\t\t\t\t// Set how far forward the particle should affect blocks&amp;#10;\t\t\t\tint forwardRange = 30; // Modify this value to increase or decrease the range&amp;#10;\t\t\t\tfor (int i = 0; i &lt; forwardRange; i++) {&amp;#10;\t\t\t\t\t// Calculate direction based on the source entity's rotation&amp;#10;\t\t\t\t\tdouble radians = Math.toRadians(immediatesourceentity.getYRot() + 90);&amp;#10;\t\t\t\t\tdouble xOffset = Math.cos(radians) * i; // Cosine for the x direction&amp;#10;\t\t\t\t\tdouble zOffset = Math.sin(radians) * i; // Sine for the z direction&amp;#10;\t\t\t\t\tVec3 nextPos = currentPos.add(xOffset, // Calculated x-direction&amp;#10;\t\t\t\t\t\t\t0, // Keep the same y-level&amp;#10;\t\t\t\t\t\t\tzOffset // Calculated z-direction&amp;#10;\t\t\t\t\t);&amp;#10;\t\t\t\t\tBlockPos blockPos = new BlockPos((int) (nextPos.x + 1), (int) nextPos.y, (int) (nextPos.z + 1));&amp;#10;\t\t\t\t\t// Break blocks at the current and below positions&amp;#10;\t\t\t\t\tBlockState blockState = level.getBlockState(blockPos);&amp;#10;\t\t\t\t\tBlock block = blockState.getBlock();&amp;#10;\t\t\t\t\t// Ensure the block isn't bedrock, barrier, or another unbreakable block&amp;#10;\t\t\t\t\tif (block != Blocks.BEDROCK)  {&amp;#10;\t\t\t\t\t\tlevel.removeBlock(blockPos, false);&amp;#10;\t\t\t\t\t\t// Optionally, spawn particles or play a sound on block break&amp;#10;\t\t\t\t\t\tlevel.levelEvent(2001, blockPos, Block.getId(blockState)); // Block break event&amp;#10;\t\t\t\t\t}&amp;#10;\t\t\t\t\t// Break blocks below the current position&amp;#10;\t\t\t\t\tBlockPos blockPosY1 = blockPos.below(1);&amp;#10;\t\t\t\t\tBlockState blockStateY1 = level.getBlockState(blockPosY1);&amp;#10;\t\t\t\t\tif (block != Blocks.BEDROCK)  {&amp;#10;\t\t\t\t\t\tlevel.removeBlock(blockPosY1, false);&amp;#10;\t\t\t\t\t\tlevel.levelEvent(2001, blockPosY1, Block.getId(blockStateY1)); // Block break event&amp;#10;\t\t\t\t\t}&amp;#10;\t\t\t\t\tBlockPos blockPosY2 = blockPos.below(2);&amp;#10;\t\t\t\t\tBlockState blockStateY2 = level.getBlockState(blockPosY2);&amp;#10;\t\t\t\t\tif (block != Blocks.BEDROCK)  {&amp;#10;\t\t\t\t\t\tlevel.removeBlock(blockPosY2, false);&amp;#10;\t\t\t\t\t\tlevel.levelEvent(2001, blockPosY2, Block.getId(blockStateY2)); // Block break event&amp;#10;\t\t\t\t\t}&amp;#10;\t\t\t\t}</field></block></statement><next><block type=\"add_jujutsucraft_potion\"><field name=\"datalist\">FATIGUE</field><value name=\"value3\"><block type=\"math_number\"><field name=\"NUM\">0</field></block></value><value name=\"value2\"><block type=\"math_number\"><field name=\"NUM\">20</field></block></value><value name=\"tickambient\"><block type=\"logic_boolean\"><field name=\"BOOL\">FALSE</field></block></value><value name=\"particles\"><block type=\"logic_boolean\"><field name=\"BOOL\">FALSE</field></block></value><value name=\"entity\"><block type=\"entity_from_deps\"/></value></block></next></block></statement></block></next></block></xml>"
  }
}